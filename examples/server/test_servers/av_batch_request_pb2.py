# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: av_batch_request.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='av_batch_request.proto',
  package='av_batch',
  syntax='proto3',
  serialized_options=_b('\n\022com.proto.av_batchP\001'),
  serialized_pb=_b('\n\x16\x61v_batch_request.proto\x12\x08\x61v_batch\"d\n\x0e\x41VBatchRequest\x12\x11\n\ttimeStamp\x18\x01 \x01(\x03\x12\x13\n\x0bnumSpeakers\x18\x02 \x01(\x03\x12\x14\n\x0cvideoContent\x18\x03 \x01(\x0c\x12\x14\n\x0c\x61udioContent\x18\x04 \x01(\x0c\"\x1e\n\x0f\x41VBatchResponse\x12\x0b\n\x03num\x18\x01 \x01(\x03\x32Z\n\x0e\x41VBatchService\x12H\n\x0bSendAVBatch\x12\x18.av_batch.AVBatchRequest\x1a\x19.av_batch.AVBatchResponse\"\x00(\x01\x30\x01\x42\x16\n\x12\x63om.proto.av_batchP\x01\x62\x06proto3')
)




_AVBATCHREQUEST = _descriptor.Descriptor(
  name='AVBatchRequest',
  full_name='av_batch.AVBatchRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='timeStamp', full_name='av_batch.AVBatchRequest.timeStamp', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='numSpeakers', full_name='av_batch.AVBatchRequest.numSpeakers', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='videoContent', full_name='av_batch.AVBatchRequest.videoContent', index=2,
      number=3, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='audioContent', full_name='av_batch.AVBatchRequest.audioContent', index=3,
      number=4, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=36,
  serialized_end=136,
)


_AVBATCHRESPONSE = _descriptor.Descriptor(
  name='AVBatchResponse',
  full_name='av_batch.AVBatchResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='num', full_name='av_batch.AVBatchResponse.num', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=138,
  serialized_end=168,
)

DESCRIPTOR.message_types_by_name['AVBatchRequest'] = _AVBATCHREQUEST
DESCRIPTOR.message_types_by_name['AVBatchResponse'] = _AVBATCHRESPONSE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

AVBatchRequest = _reflection.GeneratedProtocolMessageType('AVBatchRequest', (_message.Message,), {
  'DESCRIPTOR' : _AVBATCHREQUEST,
  '__module__' : 'av_batch_request_pb2'
  # @@protoc_insertion_point(class_scope:av_batch.AVBatchRequest)
  })
_sym_db.RegisterMessage(AVBatchRequest)

AVBatchResponse = _reflection.GeneratedProtocolMessageType('AVBatchResponse', (_message.Message,), {
  'DESCRIPTOR' : _AVBATCHRESPONSE,
  '__module__' : 'av_batch_request_pb2'
  # @@protoc_insertion_point(class_scope:av_batch.AVBatchResponse)
  })
_sym_db.RegisterMessage(AVBatchResponse)


DESCRIPTOR._options = None

_AVBATCHSERVICE = _descriptor.ServiceDescriptor(
  name='AVBatchService',
  full_name='av_batch.AVBatchService',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  serialized_start=170,
  serialized_end=260,
  methods=[
  _descriptor.MethodDescriptor(
    name='SendAVBatch',
    full_name='av_batch.AVBatchService.SendAVBatch',
    index=0,
    containing_service=None,
    input_type=_AVBATCHREQUEST,
    output_type=_AVBATCHRESPONSE,
    serialized_options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_AVBATCHSERVICE)

DESCRIPTOR.services_by_name['AVBatchService'] = _AVBATCHSERVICE

# @@protoc_insertion_point(module_scope)
